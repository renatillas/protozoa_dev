//// Generated by Protozoa from test/cli_error_handling_generated/test_problematic.proto
//// 
//// This file is auto-generated and can be safely deleted and regenerated.
//// To regenerate all proto files, run: gleam run -m protozoa
//// 
//// DO NOT EDIT THIS FILE MANUALLY - all changes will be lost on regeneration.

import protozoa/decode
import protozoa/encode

pub type ProblematicMessage {
  ProblematicMessage(import_: String, type_: String, fn_: String)
}

pub fn encode_problematicmessage(
  problematicmessage: ProblematicMessage,
) -> BitArray {
  encode.message([
    encode.string_field(1, problematicmessage.import_),
    encode.string_field(2, problematicmessage.type_),
    encode.string_field(3, problematicmessage.fn_),
  ])
}

pub fn problematicmessage_decoder() -> decode.Decoder(ProblematicMessage) {
  use import_ <- decode.then(decode.string_with_default(1, ""))
  use type_ <- decode.then(decode.string_with_default(2, ""))
  use fn_ <- decode.then(decode.string_with_default(3, ""))
  decode.success(ProblematicMessage(import_: import_, type_: type_, fn_: fn_))
}

pub fn decode_problematicmessage(
  data: BitArray,
) -> Result(ProblematicMessage, List(decode.DecodeError)) {
  decode.run(data, problematicmessage_decoder())
}
